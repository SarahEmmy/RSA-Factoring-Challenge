#!/bin/bash
"""
Factorize as many numbers as possible into a product of two smaller numbers.

    Usage: factors <file>
        where <file> is a file containing natural numbers to factor.
        One number per line
        You can assume that all lines will be valid natural numbers\
                greater than 1
        You can assume that there will be no empy line, and no space\
                before and after the valid number
        The file will always end with a new line
    Output format: n=p*q
        one factorization per line
        p and q don’t have to be prime numbers
        See example
    You can work on the numbers of the file in the order of your choice
    Your program should run without any dependency: You will not be ablei\
            to install anything on the machine we will run your program on
    Time limit: Your program will be killed after 5 seconds\
            if it hasn’t finish
    Push all your scripts, source code, etc… to your repository
"""
# Usage function
usage() {
	echo "Usage: $0 <file>"
	echo "  <file>  File containing positive integers (one per line)"
}

# Check if file parameter is provided and exists
if [ -z "$1" ] || [ ! -f "$1" ]; then
	usage
	exit 1
fi

# Read the file line by line
filename="$1"
while IFS= read -r number; do
	result=$(factor "$number")
	second_num=$(echo $result | tr ":" "=" | cut -d " " -f 2 | tr -d " ")
	third_num=$(expr $number / $second_num)
	echo "$number=$third_num*$second_num"
done < "$filename"
